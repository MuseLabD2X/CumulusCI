name: Release Test üß™üîç

on:
    pull_request:
        types: [opened, synchronize, reopened] # Default
    workflow_call:
        secrets:
            CUMULUSCI_ORG_packaging:
                required: true
            CUMULUSCI_SERVICE_github:
                required: true
            CCITEST_APP_KEY:
                required: true
            SFDX_CLIENT_ID:
                required: true
            SFDX_HUB_KEY:
                required: true
            SFDX_HUB_KEY_BASE64:
                required: true
            SFDX_HUB_USERNAME:
                required: true

env:
    CUMULUSCI_ORG_scratch: '{"config_file": "orgs/dev.json", "scratch": true}'
    CUMULUSCI_ORG_packaging: ${{ secrets.CUMULUSCI_ORG_packaging }}
    CUMULUSCI_SERVICE_github: ${{ secrets.CUMULUSCI_SERVICE_github }}
    GITHUB_APP_ID: 129383
    GITHUB_APP_KEY: ${{ secrets.CCITEST_APP_KEY }}
    SFDX_CLIENT_ID: ${{ secrets.SFDX_CLIENT_ID }}
    SFDX_HUB_KEY: ${{ secrets.SFDX_HUB_KEY }}
    SFDX_HUB_KEY_BASE64: ${{ secrets.SFDX_HUB_KEY_BASE64 }}
    SFDX_HUB_USERNAME: ${{ secrets.SFDX_HUB_USERNAME }}

jobs:
    test_artifacts:
        name: üß™ Test Package Artifacts
        runs-on: ${{ github.repository_owner == 'SFDO-Tooling' && 'SFDO-Tooling-Ubuntu' || 'ubuntu-latest' }}
        steps:
            - name: üì¶ Checkout Code
              uses: actions/checkout@v3
            - name: üêç Set up Python 3.8
              uses: actions/setup-python@v4
              with:
                  python-version: 3.8
                  cache: pip
                  cache-dependency-path: "requirements/*.txt"
            - name: üõ†Ô∏è Install build tools
              run: |
                  echo "Installing Hatch..."
                  pip install hatch
            - name: ‚öôÔ∏è Test source tarball and binary wheel
              run: |
                  echo "Building packages for testing..."
                  hatch build
            - name: üì¶ Test install of wheel
              run: |
                  echo "Testing wheel installation..."
                  pip install dist/cumulusci*.whl
                  pip show cumulusci
                  pip uninstall -y cumulusci
            - name: üì¶ Test install of sdist
              run: |
                  echo "Testing sdist installation..."
                  pip install dist/cumulusci*.tar.gz
                  pip show cumulusci
                  pip uninstall -y cumulusci
            - name: üì§ Store artifacts
              if: failure()
              uses: actions/upload-artifact@v3
              with:
                  name: packages
                  path: dist

    test_release:
        name: üöÄ Test Release Flows
        runs-on: SFDO-Tooling-Ubuntu
        concurrency: release
        steps:
            - name: ÔøΩÔøΩ Checkout Code
              uses: actions/checkout@v3
            - name: üêç Set up Python 3.8
              uses: actions/setup-python@v4
              with:
                  python-version: 3.8
                  cache: pip
                  cache-dependency-path: "requirements/*.txt"
            - name: üì• Install Python dependencies
              run: |
                  echo "Installing dependencies..."
                  pip install -r requirements_dev.txt
            - name: ‚öôÔ∏è Install sfdx
              run: |
                  echo "Installing Salesforce CLI..."
                  mkdir sfdx
                  wget -qO- https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz | tar xJ -C sfdx --strip-components 1
                  echo $(realpath sfdx/bin) >> $GITHUB_PATH
            - name: üîê Authenticate Dev Hub
              run: |
                  echo "Authenticating Dev Hub..."
                  sfdx plugins --core
                  echo $SFDX_HUB_KEY_BASE64 | base64 --decode > sfdx.key
                  sfdx auth:jwt:grant --clientid $SFDX_CLIENT_ID --jwtkeyfile sfdx.key --username $SFDX_HUB_USERNAME --setdefaultdevhubusername -a hub
            - name: üìÇ Check out CumulusCI-Test
              run: |
                  echo "Cloning CumulusCI-Test repository..."
                  git clone https://github.com/SFDO-Tooling/CumulusCI-Test
            - name: ‚ñ∂Ô∏è Run ci_feature flow
              run: |
                  echo "Running ci_feature flow..."
                  cd CumulusCI-Test
                  coverage run --append --rcfile=../pyproject.toml --source=../cumulusci $(which cci) flow run ci_feature --org scratch --delete-org
            - name: ‚ñ∂Ô∏è Run ci_beta flow
              run: |
                  echo "Running ci_beta flow..."
                  cd CumulusCI-Test
                  coverage run --append --rcfile=../pyproject.toml --source=../cumulusci $(which cci) flow run ci_beta --org scratch --delete-org
            - name: ‚ñ∂Ô∏è Run ci_master flow
              run: |
                  echo "Running ci_master flow..."
                  cd CumulusCI-Test
                  coverage run --append --rcfile=../pyproject.toml --source=../cumulusci $(which cci) flow run ci_master --org scratch --delete-org
            - name: ‚ñ∂Ô∏è Run release_beta flow
              run: |
                  echo "Running release_beta flow..."
                  export SFDX_HUB_KEY="$(echo $SFDX_HUB_KEY_BASE64 | base64 --decode)"
                  cd CumulusCI-Test
                  coverage run --append --rcfile=../pyproject.toml --source=../cumulusci $(which cci) flow run release_beta --org packaging
